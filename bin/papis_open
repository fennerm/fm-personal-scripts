#!/usr/bin/env python
"""Open a pdf file associated with a papis directory.

If no pdf exists, attempts to download one from scihub.
"""
import sys

from plumbum import local
from plumbum.cmd import mimeo
from scihub.scihub import SciHub
import yaml


def get_search_key(bib_info):
    """Get a search key for scihub from the info.yml file."""
    if "doi" in bib_info:
        search_key = bib_info["doi"]
    elif "pmcid" in bib_info:
        search_key = bib_info["pmcid"]
    elif "url" in bib_info:
        search_key = bib_info["url"]
    else:
        raise ValueError("Failed to find a scihub query key in yaml file.")
    return search_key


def download_pdf(bib_info):
    """Download a pdf from scihub."""
    search_key = get_search_key(bib_info)
    dest = local.path(bib_info["ref"] + ".pdf")
    sh = SciHub()
    sh.download(search_key, path=dest)


def papis_open(dir):
    try:
        pdf_contents = (dir // "*.pdf")[0]
    except IndexError:
        try:
            yaml_file = (dir // ("info.yml", "info.yaml"))[0]
            with yaml_file.open("r") as f:
                bib_info = yaml.load(f)
        except IndexError:
            raise OSError(
                "Could not find an info.yml file in the selected directory"
            )
        with local.cwd(dir):
            download_pdf(bib_info)
        try:
            pdf_contents = (dir // "*.pdf")[0]
        except IndexError:
            sys.exit("Failed to find a download pdf for chosen citation.")
    mimeo(pdf_contents)

# OPEN COMMAND
# i3-msg exec "okular ~/data/bib/papis/nuc_megadaph/nuclear_mutation_rate/44093578c59b64d6a3edcc8ba1b9d7b5-Sung-Way-and-Ackerm/Sung-et-al.---2015---Asymmetric-Context-dependent-Mutation-Patterns-Rev.pdf"; i3-msg split vertical; i3-msg exec "sleep 1 && termite --hold -e vim notes.txt"


if __name__ == "__main__":
    dir = sys.argv[1]
    if dir:
        papis_open(local.path(dir))
