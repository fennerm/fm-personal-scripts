#!/usr/bin/env python
"""Custom method for searching for bibfiles with papis

By default papis uses flat libraries with no sublibraries for search. This
script adds support for sublibraries by adding extra rofi menus.
"""
import sys

from plumbum import local, ProcessExecutionError
from plumbum.cmd import echo, rofi

ROOT = local.path("~/data/bib/papis")


def pick_from(dir):
    """Present menu of sublibraries with rofi."""
    options = "\n".join(["NEW"] + [x.name for x in dir.glob("*")])
    try:
        choice = (echo[options] | rofi["-dmenu", "-p", "Library: "])().rstrip()
    except ProcessExecutionError:
        sys.exit(1)
    if choice == "NEW":
        pick = choice
    else:
        pick = dir / choice
    return pick


def at_stop_point(dir):
    """Return True if there are no sublibraries beyond dir."""
    subdir = next(dir.iterdir())
    return subdir / "info.yaml" in subdir.glob("*")


def create_new_lib(dir):
    dirname = rofi(
        "-dmenu", "-p", dir + "/", "-lines", "0", "-width", "40"
    ).rstrip()
    new_lib = dir / dirname
    new_lib.mkdir()
    return new_lib


def papis_picker():
    choice = ROOT
    while True:
        new_choice = pick_from(choice)
        if new_choice == "NEW":
            new_lib = create_new_lib(choice)
            print(new_lib)
            sys.exit()
        if at_stop_point(choice):
            print(new_choice)
            sys.exit()
        choice = new_choice


if __name__ == "__main__":
    papis_picker()
